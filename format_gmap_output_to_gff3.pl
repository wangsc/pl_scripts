#!/usr/bin/perl -w
use strict;

my $sUsage = "perl $0 <gmap_outfile>\n";
die $sUsage unless @ARGV;
my $gmap_file = shift;
open (IN, $gmap_file) or die;

my %exons;
my $flag = 0;
while(<IN>)
{
	next if /^\s+$/;
	if (/^\# Generated by GMAP/){$flag = 1; next}
	next unless $flag;
# GMAP output format
# 1B	Chr_1.fa	cDNA_match	33223053	33223214	98	+	.	ID=BobWhite_mira1_c8.path1;Name=BobWhite_mira1_c8;Target=BobWhite_mira1_c8 740 901;Gap=M162
# 1B	Chr_1.fa	cDNA_match	33223517	33223697	99	+	.	ID=BobWhite_mira1_c8.path1;Name=BobWhite_mira1_c8;Target=BobWhite_mira1_c8 902 1082;Gap=M181
# 1B	Chr_1.fa	cDNA_match	482953732	482954609	97	+	.	ID=BobWhite_mira1_c1.path1;Name=BobWhite_mira1_c1;Target=BobWhite_mira1_c1 639 1517;Gap=M545 I1 M333
# 1B	Chr_1.fa	cDNA_match	357823051	357823608	99	+	.	ID=BobWhite_mira1_c11.path1;Name=BobWhite_mira1_c11;Target=BobWhite_mira1_c11 642 1199;Gap=M555
# 1A	Chr_1.fa	cDNA_match	479847278	479847496	99	+	.	ID=BobWhite_mira1_c12.path1;Name=BobWhite_mira1_c12;Target=BobWhite_mira1_c12 147 365;Gap=M219
	my $gene_id = $1 if /ID=(\S+?)\./;
	die "$_\nnot defiend gene_id\n" unless defined $gene_id;
	my @data = split /\s+/,$_;
	my ($genome_id, $exon_start, $exon_end) = @data[0, 3, 4];
	push @{$exons{$genome_id}{$gene_id}}, [sort{$a<=>$b}@data[3,4]];
}
close IN;

# output gff3 format
#ctg123	example	mRNA	1300	9950	.	+	.	ID=t_012143;gene_name=EDEN
#ctg123	example	exon	1300	1500	.	+	.	Parent=t_012143
#ctg123	example	exon	3000	3902	.	+	.	Parent=t_012143
#ctg123	example	exon	5000	5500	.	+	.	Parent=t_012143
#ctg123	example	exon	7000	9000	.	+	.	Parent=t_012143
#ctg123	example	exon	9400	9950	.	+	.	Parent=t_012143

foreach my $chr (sort{$a cmp $b} keys %exons)
{
	foreach my $gene_id (keys %{$exons{$chr}})
	{
		my @exons_array = sort{$a->[0] <=> $b ->[0]} @{$exons{$chr}{$gene_id}};
		my @mRNA_range = ($exons_array[0][0], $exons_array[-1][1]);
		print join("\t",($chr, "GMAP", "mRNA", @mRNA_range, ".\t.\t.", "ID=$gene_id"."_".$chr)),"\n";
		foreach my $exon_ref (@exons_array)
		{
			print join("\t",($chr, "GMAP", "exon", @$exon_ref, ".\t.\t.", "Parent=$gene_id"."_".$chr)),"\n";
		}
	}
}

# Subroutines
sub max
{
	my $max = shift;
	map{$max = $_ if $max < $_} @_;
	return $max;
}

sub min
{
	my $min = shift;
	map{$min = $_ if $min > $_} @_;
	return $min;
}